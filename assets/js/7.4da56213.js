(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{193:function(t,e,v){"use strict";v.r(e);var r=v(0),_=Object(r.a)({},function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"fast-bezier-curve-贝瑟尔曲线类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#fast-bezier-curve-贝瑟尔曲线类","aria-hidden":"true"}},[t._v("#")]),t._v(" fast-bezier-curve 贝瑟尔曲线类")]),t._v(" "),v("h2",{attrs:{id:"示例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#示例","aria-hidden":"true"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),v("iframe",{staticStyle:{width:"100%"},attrs:{height:"565",scrolling:"no",title:"fast-bezier-curve 示例",src:"//codepen.io/taoxusheng/embed/RXVEYd/?height=565&theme-id=dark,result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"}},[t._v("\n  See the Pen "),v("a",{attrs:{href:"https://codepen.io/taoxusheng/pen/RXVEYd/"}},[t._v("fast-bezier-curve 示例")]),t._v(" by MT\n  ("),v("a",{attrs:{href:"https://codepen.io/taoxusheng"}},[t._v("@taoxusheng")]),t._v(") on "),v("a",{attrs:{href:"https://codepen.io"}},[t._v("CodePen")]),t._v(".\n")]),t._v(" "),v("h2",{attrs:{id:"属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("属性")]),t._v(" "),v("th",[t._v("类型")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("默认值")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[v("strong",[t._v("options")])]),t._v(" "),v("td",[t._v("Array")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("这里是对 bezierCurve 的扩展，该数组中存放 bezierCurve options 对象，当前对象的属性会覆盖通过 prop 传递的属性。建议将 ptah 数组与自定义数据放在该数组中。")])]),t._v(" "),v("tr",[v("td",[v("strong",[t._v("mid")])]),t._v(" "),v("td",[t._v("number / string")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("地图实例的唯一 id，bezierCurve 组件通过 mid 获取对应的地图实例，然后将覆盖物渲染在对应的地图实例中。")])]),t._v(" "),v("tr",[v("td",[t._v("beforeCreate")]),t._v(" "),v("td",[t._v("Function")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("如果传递了该函数，将在渲染 bezierCurve 之前调用函数，参数是传入的 options 以及相关 prop 属性的合并对象")])]),t._v(" "),v("tr",[v("td",[t._v("zIndex")]),t._v(" "),v("td",[t._v("number")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),v("td",[t._v("多边形覆盖物的叠加顺序。地图上存在多个多边形覆盖物叠加时，通过该属性使级别较高的多边形覆盖物在上层显示默认 zIndex：10")])]),t._v(" "),v("tr",[v("td",[t._v("path")]),t._v(" "),v("td",[t._v("Array")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("贝瑟尔曲线的路径。描述为一个二维数组规则如下：第一个元素是起点，"),v("br"),t._v("之后的元素同时描述控制点和途经点，之后每个元素可以有0个到2个控制点"),v("br"),t._v("控制点在前，途经点在最后"),v("br"),t._v("["),v("br"),t._v(" [lng,lat],//起点0"),v("br"),t._v("[lng,lat,lng,lat],//控制点、途经点1"),v("br"),t._v("[lng,lat,lng,lat,lng,lat],//控制点、控制点、途经点2"),v("br"),t._v("[lng,lat,lng,lat]//控制点、途经点3"),v("br"),t._v("]"),v("br"),t._v("或者"),v("br"),t._v("["),v("br"),t._v("  [ [lng,lat] ],//起点0"),v("br"),t._v("  [ [lng,lat] , [lng,lat] ],//控制点、途经点1"),v("br"),t._v("  [ [lng,lat] , [lng,lat] , [lng,lat]],//控制点、控制点、途经点2"),v("br"),t._v("  [ [lng,lat] , [lng,lat] ]//控制点、途经点3"),v("br"),t._v("]"),v("br")])]),t._v(" "),v("tr",[v("td",[t._v("showDir")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),v("td",[t._v("是否显示白色方向箭头")])]),t._v(" "),v("tr",[v("td",[t._v("bubble")]),t._v(" "),v("td",[t._v("boolean")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("false")]),t._v(" "),v("td",[t._v("是否将覆盖物的鼠标或 touch 等事件冒泡到地图上，默认值：false")])]),t._v(" "),v("tr",[v("td",[t._v("cursor")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("指定鼠标悬停时的鼠标样式，自定义 cursor，IE 仅支持 cur/ani/ico 格式，Opera 不支持自定义 cursor")])]),t._v(" "),v("tr",[v("td",[t._v("strokeColor")]),t._v(" "),v("td",[t._v("string")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("#006600")]),t._v(" "),v("td",[t._v("线条颜色，使用 16 进制颜色代码赋值")])]),t._v(" "),v("tr",[v("td",[t._v("strokeOpacity")]),t._v(" "),v("td",[t._v("number")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("0.9")]),t._v(" "),v("td",[t._v("轮廓线透明度，取值范围[0,1]，0 表示完全透明，1 表示不透明")])]),t._v(" "),v("tr",[v("td",[t._v("strokeWeight")]),t._v(" "),v("td",[t._v("number")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("轮廓线宽度")])])])]),t._v(" "),v("p",[t._v("| draggable       | boolean         |  false  | 设置多边形是否可拖拽移动，默认为 false                                                                                                                                                                                                                                                                                                                 |\n| extData         | Any             |    -    | 用户自定义属性，支持 JavaScript API 任意数据类型，如 bezierCurve 的 id 等                                                                                                                                                                                                                                                                                  |\n| strokeStyle     | number          |    -    | 轮廓线样式，实线:solid，虚线:dashed                                                                                                                                                                                                                                                                                                                    |\n| strokeDasharray | Array           |   []    | 虚线的分段，如[10,10] |\n| isOutline | boolean | false | 是否描边 |\n| outlineColor | string | - | 描边颜色 |\n| borderWeight | number | - | 描边宽度 |")]),t._v(" "),v("h1",{attrs:{id:"事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),v("div",{staticClass:"tip custom-block"},[v("p",[t._v("bezierCurve 组件的事件对象中可以获取 options 中的自定义属性数据，通过 event.target.dataOptions 获取。")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("事件")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("参数")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("click")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[v("a",{attrs:{href:"https://lbs.amap.com/api/javascript-api/reference/event#MapsEvent",target:"_blank",rel:"noopener noreferrer"}},[t._v("MapsEvent"),v("OutboundLink")],1)]),t._v(" "),v("td",[t._v("鼠标左键单击事件")])]),t._v(" "),v("tr",[v("td",[t._v("dblclick")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("鼠标左键双击事件")])]),t._v(" "),v("tr",[v("td",[t._v("rightclick")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("右键单击")])]),t._v(" "),v("tr",[v("td",[t._v("hide")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("{type, target}")]),t._v(" "),v("td",[t._v("隐藏")])]),t._v(" "),v("tr",[v("td",[t._v("show")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("{type, target}")]),t._v(" "),v("td",[t._v("显示")])]),t._v(" "),v("tr",[v("td",[t._v("mousedown")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("鼠标按下")])]),t._v(" "),v("tr",[v("td",[t._v("mouseup")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("鼠标抬起")])]),t._v(" "),v("tr",[v("td",[t._v("mouseover")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("鼠标经过")])]),t._v(" "),v("tr",[v("td",[t._v("mouseout")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("鼠标移出")])]),t._v(" "),v("tr",[v("td",[t._v("change")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("属性发生变化时")])]),t._v(" "),v("tr",[v("td",[t._v("touchstart")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("触摸开始时触发事件，仅适用移动设备")])]),t._v(" "),v("tr",[v("td",[t._v("touchmove")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("触摸移动进行中时触发事件，仅适用移动设备")])]),t._v(" "),v("tr",[v("td",[t._v("touchend")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("MapsEvent")]),t._v(" "),v("td",[t._v("触摸结束时触发事件，仅适用移动设备")])])])]),t._v(" "),v("h2",{attrs:{id:"方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),v("div",{staticClass:"tip custom-block"},[v("p",[t._v("通过 "),v("code",[t._v("$refs")]),t._v(" 获取组件实例来调用。例如："),v("code",[t._v("this.$refs.mybezierCurve.getAll()")]),t._v("，关于 bezierCurve 类的实例方法，请查看官方文档 "),v("a",{attrs:{href:"https://lbs.amap.com/api/javascript-api/reference/overlay#bezierCurve",target:"_blank",rel:"noopener noreferrer"}},[t._v("bezierCurve"),v("OutboundLink")],1)])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("方法")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("参数")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("返回值")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("getAMapPromise")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Promise")]),t._v(" "),v("td",[t._v("获取 AMap 类，返回一个 Promise 对象，在 reslove 中返回 AMap 类")])]),t._v(" "),v("tr",[v("td",[t._v("getAMapInstance")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("AMap")]),t._v(" "),v("td",[t._v("获取 AMap 类，请在地图组件 complete 之后获取，否则返回值可能是 Null")])]),t._v(" "),v("tr",[v("td",[t._v("getMapInstance")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("- 或 mid")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("map")]),t._v(" "),v("td",[t._v("根据 mid 获取当前地图实例，默认会根据组件传入的 mid 属性获取")])]),t._v(" "),v("tr",[v("td",[t._v("hideAll")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("隐藏当前组件所有的 bezierCurve 实例")])]),t._v(" "),v("tr",[v("td",[t._v("showAll")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("显示当前组件所有的 bezierCurve 实例")])]),t._v(" "),v("tr",[v("td",[t._v("clearAll")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("清空当前组件所有的 bezierCurve 实例")])]),t._v(" "),v("tr",[v("td",[t._v("removebezierCurves")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("bezierCurves, propName")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("删除传入的 bezierCurve 实例数组，该方法不会导致 vue 重新渲染，propName 是每个 bezierCurve 实例 options 中的唯一值，例如 id, key 它用来做查询优化，请保证每个实例 options 中的 propName 值都是唯一的，如果传入该参数将会大大优化性能。")])]),t._v(" "),v("tr",[v("td",[t._v("getAll")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("Array")]),t._v(" "),v("td",[t._v("获取当前组件所有的 bezierCurve 实例")])]),t._v(" "),v("tr",[v("td",[t._v("getInstanceByProp")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("propName, propValue")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("根据传入的属性名称与值查找对应的 bezierCurve 实例")])]),t._v(" "),v("tr",[v("td",[t._v("getInstanceByProps")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("propName, propValues")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("根据传入的属性名称与值的数组查找对应的 bezierCurve 实例数组，该方法对遍历做了优化，建议使用该方法获取 bezierCurve 数组")])]),t._v(" "),v("tr",[v("td",[t._v("addbezierCurves")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("options, beforeCreate")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),v("td",[t._v("options 是一个 bezierCurve beforeCreate 是一个可选的回调函数，默认可以不传递，可在创建 bezierCurve 之前调用，将 bezierCurve 属性传入其中，可以通过该方法处理自定义渲染。新增的 bezierCurve 数组会添加在组件中，此时 getAll 方法获取的数组中包含新增 bezierCurve，该方法不会导致 vue 重新渲染")])])])])])},[],!1,null,null,null);e.default=_.exports}}]);